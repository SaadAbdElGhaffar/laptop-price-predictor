name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test import statements
      run: |
        python -c "from src.data.data_loader import load_data"
        python -c "from src.data.transformers import FullPipeline1"
        python -c "from src.models.model_training import get_base_models"
        python -c "from src.visualization.plots import plot_regression_performance"
        python -c "from src.utils.helpers import detect_outliers_iqr"
    
    - name: Run basic structure tests
      run: |
        python -c "
        import os
        assert os.path.exists('src/data/data_loader.py')
        assert os.path.exists('src/data/transformers.py')
        assert os.path.exists('src/models/model_training.py')
        assert os.path.exists('src/visualization/plots.py')
        assert os.path.exists('src/utils/helpers.py')
        assert os.path.exists('train.py')
        assert os.path.exists('requirements.txt')
        print('All required files exist')
        "

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Check code formatting with Black
      run: |
        black --check --diff .
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
    
    - name: Type checking with mypy (optional)
      run: |
        mypy src/ --ignore-missing-imports || true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Security check with bandit
      run: |
        bandit -r src/ -f json || true
    
    - name: Safety check for known vulnerabilities
      run: |
        safety check || true